#345. Reverse Vowels of a String
class Solution:
    def reverseVowels(self, s: str) -> str:
        vowels_list = []
        for i in range(len(s)):
            if s[i] in "aeiouAEIOU":
                vowels_list.append(s[i])
        vowels_list.reverse()
        j = 0
        returnstr = []
        for i in range(len(s)):
            if s[i] in "aeiouAEIOU":
                returnstr.append(vowels_list[j])
                j = j + 1
            else:
                returnstr.append(s[i])
        return ''.join(returnstr)
#605. Can Place Flowers - lot of usecases
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        max = 0
        if n == 0:
            return True
        if len(flowerbed) == 1:
            if flowerbed[0] == 1:
                return False
            else:
                return True
        for i in range(0, len(flowerbed)-1):
            if flowerbed[i] == 1:
                continue
            else:
                if i == len(flowerbed)-1:
                    if flowerbed[i] == 0 and flowerbed[i-1] == 0:
                        flowerbed[i] = 1
                        max += 1
                else:
                    if i == 0 and flowerbed[i] == 0 and flowerbed[i+1] == 0:
                        flowerbed[i] = 1
                        max += 1
                    else:
                        if flowerbed[i-1] == 0 and flowerbed[i+1] == 0:
                            flowerbed[i] = 1
                            max += 1
                            continue
                        if i == len(flowerbed)-2 and flowerbed[i+1] == 0:
                            flowerbed[i] = 1
                            max += 1

        if max >= n:
            return True
        else:
            return False

#151. Reverse Words in a String
class Solution:
    def reverseWords(self, s: str) -> str:
        words_list = []
        word = ''
        for i in range(len(s)):
            if s[i] == ' ':
                if word.strip() != "":
                    words_list.append(word.strip())
                word = ''
            else:
                word += s[i]

            if i == len(s)-1 and word.strip() != "":
                    words_list.append(word.strip())

        words_list.reverse()
        final_word = ' '.join(words_list)
        return final_word

#1768. Merge Strings Alternately
class Solution:
    def mergeAlternately(self, word1: str, word2: str) -> str:
        len1 = len(word1)
        len2 = len(word2)
        merged = ""

        if len1 > len2:
            for i in range(len2):
                merged = merged + word1[i] + word2[i]
            merged = merged + word1[len2:]
        else:
            for i in range(len1):
                merged = merged + word1[i] + word2[i]
            merged = merged + word2[len1:]
        
        return merged  

#1431. Kids With the Greatest Number of Candies - working solution
class Solution:
    def kidsWithCandies(self, candies: List[int], extraCandies: int) -> List[bool]:
        maxi = 0
        
        for i in range(len(candies)):
            if candies[i] > maxi:
                maxi = candies[i]

        returnlist = []

        for i in range(len(candies)):
            if candies[i] + extraCandies >= maxi:
                returnlist.append(True)
            else:
                returnlist.append(False)
        
        return returnlist